{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","React","createElement","className","NavLink","to","style","alt","src","im","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","Link","concat","_id","onClick","deleteRecord","RecordList","records","setRecords","useState","useEffect","async","response","fetch","ok","message","statusText","window","alert","json","getRecords","length","marginTop","map","method","newRecords","filter","el","key","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","prev","toString","fetchData","onSubmit","e","preventDefault","editedPerson","body","JSON","stringify","headers","htmlFor","onChange","target","checked","Create","newPerson","catch","error","App","Routes","Route","exact","path","element","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.1746d19f.chunk.js","sourcesContent":["import React from \"react\";\r\n// We import bootstrap to make our application look better.\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n // We import NavLink to utilize the react router.\r\nimport { NavLink } from \"react-router-dom\";\r\n // Here, we display our Navbar\r\nexport default function Navbar() {\r\n return (\r\n   <div>\r\n     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n       <NavLink className=\"navbar-brand\" to=\"/\">\r\n       <img style={{\"width\" : 25 + '%'}} alt = \"navbar\" src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\"></img>\r\n       </NavLink>\r\n       <button\r\n         className=\"navbar-toggler\"im\r\n         type=\"button\"\r\n         data-toggle=\"collapse\"\r\n         data-target=\"#navbarSupportedContent\"\r\n         aria-controls=\"navbarSupportedContent\"\r\n         aria-expanded=\"false\"\r\n         aria-label=\"Toggle navigation\"\r\n       >\r\n         <span className=\"navbar-toggler-icon\"></span>\r\n       </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n         <ul className=\"navbar-nav ml-auto\">\r\n           <li className=\"nav-item\">\r\n             <NavLink className=\"nav-link\" to=\"/create\">\r\n               Create Record\r\n             </NavLink>\r\n           </li>\r\n         </ul>\r\n       </div>\r\n     </nav>\r\n   </div>\r\n );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Record = (props) => (\r\n <tr>\r\n   <td>{props.record.name}</td>\r\n   <td>{props.record.position}</td>\r\n   <td>{props.record.level}</td>\r\n   <td>\r\n     <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>Edit</Link> |\r\n     <button className=\"btn btn-link\"\r\n       onClick={() => {\r\n         props.deleteRecord(props.record._id);\r\n       }}\r\n     >\r\n       Delete\r\n     </button>\r\n   </td>\r\n </tr>\r\n);\r\nexport default function RecordList() {\r\n const [records, setRecords] = useState([]);\r\n  // This method fetches the records from the database.\r\n useEffect(() => {\r\n   async function getRecords() {\r\n     const response = await fetch(`https://smartwarebackend.netlify.app/.netlify/functions/get_records`);\r\n      if (!response.ok) {\r\n       const message = `An error occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n      const records = await response.json();\r\n     setRecords(records);\r\n   }\r\n    getRecords();\r\n    return;\r\n }, [records.length]);\r\n  // This method will delete a record\r\n async function deleteRecord(id) {\r\n   await fetch(`http://localhost:5000/${id}`, {\r\n     method: \"DELETE\"\r\n   });\r\n    const newRecords = records.filter((el) => el._id !== id);\r\n   setRecords(newRecords);\r\n }\r\n  // This method will map out the records on the table\r\n function recordList() {\r\n   return records.map((record) => {\r\n     return (\r\n       <Record\r\n         record={record}\r\n         deleteRecord={() => deleteRecord(record._id)}\r\n         key={record._id}\r\n       />\r\n     );\r\n   });\r\n }\r\n  // This following section will display the table with the records of individuals.\r\n return (\r\n   <div>\r\n     <h3>Inventory</h3>\r\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\r\n       <thead>\r\n         <tr>\r\n           <th>Item Name</th>\r\n           <th>Quantity</th>\r\n           <th>Location</th>\r\n           <th>Action</th>\r\n         </tr>\r\n       </thead>\r\n       <tbody>{recordList()}</tbody>\r\n     </table>\r\n   </div>\r\n );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router\";\r\n export default function Edit() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n   records: [],\r\n });\r\n const params = useParams();\r\n const navigate = useNavigate();\r\n  useEffect(() => {\r\n   async function fetchData() {\r\n     const id = params.id.toString();\r\n     const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\r\n      if (!response.ok) {\r\n       const message = `An error has occurred: ${response.statusText}`;\r\n       window.alert(message);\r\n       return;\r\n     }\r\n      const record = await response.json();\r\n     if (!record) {\r\n       window.alert(`Record with id ${id} not found`);\r\n       navigate(\"/\");\r\n       return;\r\n     }\r\n      setForm(record);\r\n   }\r\n    fetchData();\r\n    return;\r\n }, [params.id, navigate]);\r\n  // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n  async function onSubmit(e) {\r\n   e.preventDefault();\r\n   const editedPerson = {\r\n     name: form.name,\r\n     position: form.position,\r\n     level: form.level,\r\n   };\r\n    // This will send a post request to update the data in the database.\r\n   await fetch(`http://localhost:5000/update/${params.id}`, {\r\n     method: \"POST\",\r\n     body: JSON.stringify(editedPerson),\r\n     headers: {\r\n       'Content-Type': 'application/json'\r\n     },\r\n   });\r\n    navigate(\"/\");\r\n }\r\n  // This following section will display the form that takes input from the user to update the data.\r\n return (\r\n   <div>\r\n     <h3>Update Record</h3>\r\n     <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"name\">Name: </label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"name\"\r\n           value={form.name}\r\n           onChange={(e) => updateForm({ name: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">Position: </label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"position\"\r\n           value={form.position}\r\n           onChange={(e) => updateForm({ position: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionIntern\"\r\n             value=\"Intern\"\r\n             checked={form.level === \"Intern\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionJunior\"\r\n             value=\"Junior\"\r\n             checked={form.level === \"Junior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"positionSenior\"\r\n             value=\"Senior\"\r\n             checked={form.level === \"Senior\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\r\n       </div>\r\n       </div>\r\n       <br />\r\n \r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Update Record\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nexport default function Create() {\r\n const [form, setForm] = useState({\r\n   name: \"\",\r\n   position: \"\",\r\n   level: \"\",\r\n });\r\n const navigate = useNavigate();\r\n  // These methods will update the state properties.\r\n function updateForm(value) {\r\n   return setForm((prev) => {\r\n     return { ...prev, ...value };\r\n   });\r\n }\r\n  // This function will handle the submission.\r\n async function onSubmit(e) {\r\n   e.preventDefault();\r\n    // When a post request is sent to the create url, we'll add a new record to the database.\r\n   const newPerson = { ...form };\r\n    await fetch(\"http://localhost:5000/record/add\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newPerson),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n    setForm({ name: \"\", position: \"\", level: \"\" });\r\n   navigate(\"/\");\r\n }\r\n  // This following section will display the form that takes the input from the user.\r\n return (\r\n   <div>\r\n     <h3>Create New Record</h3>\r\n     <form onSubmit={onSubmit}>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"name\">Item</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"name\"\r\n           value={form.name}\r\n           onChange={(e) => updateForm({ name: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <label htmlFor=\"position\">Quantity</label>\r\n         <input\r\n           type=\"text\"\r\n           className=\"form-control\"\r\n           id=\"position\"\r\n           value={form.position}\r\n           onChange={(e) => updateForm({ position: e.target.value })}\r\n         />\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"cabOne\"\r\n             value=\"Cabinet #1\"\r\n             checked={form.level === \"Cabinet #1\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionIntern\" className=\"form-check-label\">Cabinet #1</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"cabTwo\"\r\n             value=\"Cabinet #2\"\r\n             checked={form.level === \"Cabinet #2\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionJunior\" className=\"form-check-label\">Cabinet #2</label>\r\n         </div>\r\n         <div className=\"form-check form-check-inline\">\r\n           <input\r\n             className=\"form-check-input\"\r\n             type=\"radio\"\r\n             name=\"positionOptions\"\r\n             id=\"cabThree\"\r\n             value=\"Cabinet #3\"\r\n             checked={form.level === \"Cabinet #3\"}\r\n             onChange={(e) => updateForm({ level: e.target.value })}\r\n           />\r\n           <label htmlFor=\"positionSenior\" className=\"form-check-label\">Cabinet #3</label>\r\n         </div>\r\n       </div>\r\n       <div className=\"form-group\">\r\n         <input\r\n           type=\"submit\"\r\n           value=\"Add Entity\"\r\n           className=\"btn btn-primary\"\r\n         />\r\n       </div>\r\n     </form>\r\n   </div>\r\n );\r\n}","import React from \"react\";\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n // We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n const App = () => {\n return (\n   <div>\n     <Navbar />\n     <Routes>\n       <Route exact path=\"/\" element={<RecordList />} />\n       <Route path=\"/edit/:id\" element={<Edit />} />\n       <Route path=\"/create\" element={<Create />} />\n     </Routes>\n   </div>\n );\n};\n export default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}